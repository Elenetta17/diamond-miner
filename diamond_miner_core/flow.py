"""Flow mapper operations."""

import random
from abc import ABC, abstractmethod

# NOTE: Currently we map IPs to (0, 254).
# NOTE: By convention we make the flow ID starts at 0.


class AbstractFlowMapper(ABC):
    def flow_id(self, addr_offset, *args, **kwargs):
        """
        Retrieve the flow_id from the tuple (addr_offset, port_offset).
        """
        assert addr_offset >= 0
        return self._flow_id(addr_offset, *args, **kwargs)

    def offset(self, flow_id, prefix_size, *args, **kwargs):
        """
        Given a `flow_id` and a `prefix_size`,
        returns a tuple (addr_offset, port_offset).
        """
        assert flow_id >= 0
        assert prefix_size >= 0
        return self._offset(flow_id, prefix_size, *args, **kwargs)

    @abstractmethod
    def _flow_id(self, addr_offset, *args, **kwargs):
        pass

    @abstractmethod
    def _offset(self, flow_id, prefix_size, *args, **kwargs):
        pass


class SequentialFlowMapper(AbstractFlowMapper):
    """Sequential flow mapper (legacy)."""

    def _flow_id(self, addr_offset, *args, **kwargs):
        return addr_offset

    def _offset(self, flow_id, prefix_size, *args, **kwargs):
        n = 2 ** (32 - prefix_size)
        if flow_id < n:
            return (flow_id, 0)
        return (254, flow_id - n + 1)


class ReverseByteOrderFlowMapper(AbstractFlowMapper):
    """Reverse byte order flow mapper."""

    def _reverse_bytes(self, i):
        return int("{:08b}".format(i)[::-1], 2)

    def _flow_id(self, addr_offset, *args, **kwargs):
        return self._reverse_bytes(addr_offset)

    def _offset(self, flow_id, prefix_size, *args, **kwargs):
        n = 2 ** (32 - prefix_size)
        if flow_id < n:
            return (self._reverse_bytes(flow_id), 0)
        return (254, flow_id - n + 1)


class BetterFlowMapper(AbstractFlowMapper):
    """A better flow mapper..."""

    # TODO: Cleanup?

    flow_to_offset = [
        1,
        33,
        65,
        97,
        129,
        161,
        193,
        225,
        2,
        34,
        66,
        98,
        130,
        162,
        194,
        226,
        3,
        35,
        67,
        99,
        131,
        163,
        195,
        227,
        4,
        36,
        68,
        100,
        132,
        164,
        196,
        228,
        5,
        37,
        69,
        101,
        133,
        165,
        197,
        229,
        6,
        38,
        70,
        102,
        134,
        166,
        198,
        230,
        7,
        39,
        71,
        103,
        135,
        167,
        199,
        231,
        8,
        40,
        72,
        104,
        136,
        168,
        200,
        232,
        9,
        41,
        73,
        105,
        137,
        169,
        201,
        233,
        10,
        42,
        74,
        106,
        138,
        170,
        202,
        234,
        11,
        43,
        75,
        107,
        139,
        171,
        203,
        235,
        12,
        44,
        76,
        108,
        140,
        172,
        204,
        236,
        13,
        45,
        77,
        109,
        141,
        173,
        205,
        237,
        14,
        46,
        78,
        110,
        142,
        174,
        206,
        238,
        15,
        47,
        79,
        111,
        143,
        175,
        207,
        239,
        16,
        48,
        80,
        112,
        144,
        176,
        208,
        240,
        17,
        49,
        81,
        113,
        145,
        177,
        209,
        241,
        18,
        50,
        82,
        114,
        146,
        178,
        210,
        242,
        19,
        51,
        83,
        115,
        147,
        179,
        211,
        243,
        20,
        52,
        84,
        116,
        148,
        180,
        212,
        244,
        21,
        53,
        85,
        117,
        149,
        181,
        213,
        245,
        22,
        54,
        86,
        118,
        150,
        182,
        214,
        246,
        23,
        55,
        87,
        119,
        151,
        183,
        215,
        247,
        24,
        56,
        88,
        120,
        152,
        184,
        216,
        248,
        25,
        57,
        89,
        121,
        153,
        185,
        217,
        249,
        26,
        58,
        90,
        122,
        154,
        186,
        218,
        250,
        27,
        59,
        91,
        123,
        155,
        187,
        219,
        251,
        28,
        60,
        92,
        124,
        156,
        188,
        220,
        252,
        29,
        61,
        93,
        125,
        157,
        189,
        221,
        253,
        30,
        62,
        94,
        126,
        158,
        190,
        222,
        254,
        31,
        63,
        95,
        127,
        159,
        191,
        223,
        0,
        32,
        64,
        96,
        128,
        160,
        192,
        224,
    ]

    offset_to_flow = [
        247,
        0,
        8,
        16,
        24,
        32,
        40,
        48,
        56,
        64,
        72,
        80,
        88,
        96,
        104,
        112,
        120,
        128,
        136,
        144,
        152,
        160,
        168,
        176,
        184,
        192,
        200,
        208,
        216,
        224,
        232,
        240,
        248,
        1,
        9,
        17,
        25,
        33,
        41,
        49,
        57,
        65,
        73,
        81,
        89,
        97,
        105,
        113,
        121,
        129,
        137,
        145,
        153,
        161,
        169,
        177,
        185,
        193,
        201,
        209,
        217,
        225,
        233,
        241,
        249,
        2,
        10,
        18,
        26,
        34,
        42,
        50,
        58,
        66,
        74,
        82,
        90,
        98,
        106,
        114,
        122,
        130,
        138,
        146,
        154,
        162,
        170,
        178,
        186,
        194,
        202,
        210,
        218,
        226,
        234,
        242,
        250,
        3,
        11,
        19,
        27,
        35,
        43,
        51,
        59,
        67,
        75,
        83,
        91,
        99,
        107,
        115,
        123,
        131,
        139,
        147,
        155,
        163,
        171,
        179,
        187,
        195,
        203,
        211,
        219,
        227,
        235,
        243,
        251,
        4,
        12,
        20,
        28,
        36,
        44,
        52,
        60,
        68,
        76,
        84,
        92,
        100,
        108,
        116,
        124,
        132,
        140,
        148,
        156,
        164,
        172,
        180,
        188,
        196,
        204,
        212,
        220,
        228,
        236,
        244,
        252,
        5,
        13,
        21,
        29,
        37,
        45,
        53,
        61,
        69,
        77,
        85,
        93,
        101,
        109,
        117,
        125,
        133,
        141,
        149,
        157,
        165,
        173,
        181,
        189,
        197,
        205,
        213,
        221,
        229,
        237,
        245,
        253,
        6,
        14,
        22,
        30,
        38,
        46,
        54,
        62,
        70,
        78,
        86,
        94,
        102,
        110,
        118,
        126,
        134,
        142,
        150,
        158,
        166,
        174,
        182,
        190,
        198,
        206,
        214,
        222,
        230,
        238,
        246,
        254,
        7,
        15,
        23,
        31,
        39,
        47,
        55,
        63,
        71,
        79,
        87,
        95,
        103,
        111,
        119,
        127,
        135,
        143,
        151,
        159,
        167,
        175,
        183,
        191,
        199,
        207,
        215,
        223,
        231,
        239,
    ]

    def _flow_id(self, addr_offset, *args, **kwargs):
        return self.offset_to_flow[addr_offset]

    def _offset(self, flow_id, prefix_size, *args, **kwargs):
        assert prefix_size == 24, "TODO"
        if flow_id < 256:
            return (self.flow_to_offset[flow_id], 0)
        return (254, flow_id - 256 + 1)


class RandomFlowMapper(AbstractFlowMapper):
    """Random flow mapper."""

    def __init__(self, master_seed, n_array=1000):
        self.master_seed = master_seed
        self.flow_arrays = []
        random.seed(master_seed)
        for i in range(1000):
            flow_array = [i for i in range(0, 256)]
            random.shuffle(flow_array)
            self.flow_arrays.append(flow_array)

    def _flow_id(self, addr_offset, prefix):
        flow_array = self.flow_arrays[prefix % len(self.flow_arrays)]
        return flow_array.index(addr_offset)

    def _offset(self, flow_id, prefix_size, prefix):
        assert prefix_size == 24, "TODO: Handle other sizes"
        n = 2 ** (32 - prefix_size)
        if flow_id < n:
            flow_array = self.flow_arrays[prefix % len(self.flow_arrays)]
            return (flow_array[flow_id], 0)
        else:
            return (254, flow_id - n + 1)
